<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<id>Mega Filter PRO</id>
	<version>1.5.x</version>
	<vqmver required="true">2.4.0</vqmver>
	<author>info@ocdemo.eu</author>
	
	<!-- Column Left, Column Right, Content Top, Content Bottom -->
	<file path="catalog/controller/common/" name="column_left.php,column_right.php,content_top.php">
		<!-- v2.0.0.0 -->
		<operation error="skip">
			<search position="replace"><![CDATA[if (isset($part[1]) && isset($setting[$part[1]])) {]]></search>
			<add><![CDATA[
				if( $code == 'mega_filter' ) {
					$setting['_idx'] = $part[1];
					$setting['position'] = $module['position'];
				
					if( NULL != ( $mfp = $this->load->controller('module/' . $code, $setting) ) ) {
						$data['modules'][] = $mfp;
					}
				} else if (isset($part[1]) && isset($setting[$part[1]])) {
			]]></add>
		</operation>
		<!-- v2.0.1.0 -->
		<operation error="skip">
			<search position="replace"><![CDATA[if (isset($part[0]) && $this->config->get($part[0] . '_status')) {]]></search>
			<add><![CDATA[
				if( $part[0] == 'mega_filter' ) {
					if( ! isset( $part[1] ) ) {
						continue;
					}
				
					$mfp_setting = $this->config->get($part[0] . '_module');
					$mfp_setting['_idx'] = $part[1];
					$mfp_setting['position'] = $module['position'];
				
					if( NULL != ( $mfp = $this->load->controller('module/' . $part[0], $mfp_setting) ) ) {
						$data['modules'][] = $mfp;
					}
				} else if (isset($part[0]) && $this->config->get($part[0] . '_status')) {
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/" name="common/header.php,module/category.php,extension/module/category.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA['filter_sub_category' => true]]></search>
			<add><![CDATA[				
				'filter_sub_category' => true,
				'mfp_disabled' => true
			]]></add>
		</operation>
	</file>
	
	<!-- Layout -->
	<file path="admin/controller/design/" name="layout.php">
		<operation>
			<search position="after"><![CDATA[foreach ($extensions as $code) {]]></search>
			<add><![CDATA[				
				if( $code == 'mega_filter' ) continue;
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$this->response->setOutput(]]></search>
			<add><![CDATA[
				if( __FUNCTION__ == 'getForm' && isset( $data['layout_modules'] ) ) {
					foreach( $data['layout_modules'] as $mfp_k => $mfp_v ) {
						if( strpos( $mfp_v['code'], 'mega_filter' ) === 0 ) {
							unset( $data['layout_modules'][$mfp_k] );
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="admin/model/design/" name="layout.php">
		<operation error="skip">
			<search position="replace"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "layout_module WHERE layout_id = '" . (int)$layout_id . "']]></search>
			<add><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "layout_module WHERE layout_id = '" . (int)$layout_id . "'" . ( __FUNCTION__ == 'editLayout' ? " AND `code` NOT REGEXP '^mega_filter'" : '' ) . "]]></add>
		</operation>
	</file>
	
	<!-- Controller -->
	<file path="system/engine/" name="controller.php">
		<operation>
			<search position="after"><![CDATA[class Controller {]]></search>
			<add><![CDATA[
				protected function rgetMFP( $name ){
					if( isset( $this->request->post[$name] ) ) {
						return $this->request->post[$name];
					}

					if( isset( $this->request->get[$name] ) ) {
						return $this->request->get[$name];
					}

					return null;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$this->registry = $registry;]]></search>
			<add><![CDATA[				
				if( $this->rgetMFP( $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp' ) && ! $this->config->get('mfp_path_was_verificed') && isset( $this->request->get['route'] ) ) {
					preg_match( '/path\[([^]]*)\]/', $this->rgetMFP( $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp' ), $mf_matches );
								
					if( class_exists( 'VQMod' ) ) {
						require_once VQMod::modCheck( modification( DIR_SYSTEM . '../catalog/model/module/mega_filter.php' ) );
					} else {
						require_once modification( DIR_SYSTEM . '../catalog/model/module/mega_filter.php' );
					}
				
					if( empty( $mf_matches[1] ) ) {
						preg_match( '#path,([^/]+)#', $this->rgetMFP( $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp' ), $mf_matches );
				
						if( ! empty( $mf_matches[1] ) ) {				
							if( class_exists( 'MegaFilterCore' ) ) {
								$mf_matches[1] = MegaFilterCore::__parsePath( $this, $mf_matches[1] );
							}
						}
					} else if( class_exists( 'MegaFilterCore' ) ) {
						$mf_matches[1] = MegaFilterCore::__parsePath( $this, $mf_matches[1] );
					}

					if( ! empty( $mf_matches[1] ) ) {
						if( ! $this->rgetMFP('mfilterAjax') && $this->rgetMFP('path') && $this->rgetMFP('path') != $mf_matches[1] ) {
							$this->request->get['mfp_org_path'] = $this->rgetMFP('path');
				
							if( 0 === ( $mf_strpos = strpos( $this->rgetMFP('mfp_org_path'), $mf_matches[1] . '_' ) ) ) {
								$this->request->get['mfp_org_path'] = substr( $this->rgetMFP('mfp_org_path'), $mf_strpos+strlen($mf_matches[1])+1 );
							}
						} else {
							$this->request->get['mfp_org_path'] = '';
						}
				
						//$this->request->get['path'] = $mf_matches[1];
						$this->request->get['mfp_path'] = $mf_matches[1];

						if( isset( $this->request->get['category_id'] ) || ( isset( $this->request->get['route'] ) && in_array( $this->request->get['route'], array( 'product/search', 'product/special', 'product/manufacturer/info' ) ) ) ) {
							$mf_matches = explode( '_', $mf_matches[1] );
							$this->request->get['category_id'] = end( $mf_matches );
						}
					}
				
					unset( $mf_matches );
				
					if( method_exists( $this->config, 'set' ) ) {
						$this->config->set('mfp_path_was_verificed', true);
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/product/" name="special.php">
		<operation>
			<search position="before"><![CDATA[$product_total = $this->model_catalog_product->getTotalProductSpecials();]]></search>
			<add><![CDATA[
				if( isset( $this->request->get['category_id'] ) ) {
					$filter_data['filter_category_id'] = (int) $this->request->get['category_id'];
				}
			]]></add>
		</operation>
	</file>
	
	<!-- SEO -->
	<file path="catalog/controller/" name="common/seo_mega_pack_pro_url.php" error="skip">
		<operation error="log">
			<search position="before"><![CDATA[unset( $url_data['route'] );]]></search>
			<add><![CDATA[
				if( ! isset( $this->model_module_mega_filter ) ) {
					$this->load->model( 'module/mega_filter' );
				}
				
				//if( class_exists( 'ModelModuleMegaFilter' ) && method_exists( $this->model_module_mega_filter, 'rewrite' ) ) {
					list( $url, $url_data ) = $this->model_module_mega_filter->rewrite( $url, $url_data );
				//}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/" name="common/seo_url.php,startup/seo_url.php" error="skip">
		<operation error="log">
			<search position="before"><![CDATA[unset($data['route']);]]></search>
			<add><![CDATA[
				if( ! isset( $this->model_module_mega_filter ) ) {
					$this->load->model( 'module/mega_filter' );
				}
				
				//if( method_exists( $this->model_module_mega_filter, 'rewrite' ) ) {
					list( $url, $data ) = $this->model_module_mega_filter->rewrite( $url, $data );
				//}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/" name="common/seo_url.php,common/seo_mega_pack_pro_url.php,startup/seo_url.php" error="skip">
		<operation error="log">
			<search position="after"><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE keyword = '" . $this->db->escape($part) . "'");]]></search>
			<add><![CDATA[
				$mfilterSeoConfig = $this->config->get('mega_filter_seo');
				
				if( ( ! empty( $mfilterSeoConfig['enabled'] ) || ! empty( $mfilterSeoConfig['aliases_enabled'] ) ) && ! $query->num_rows ) {				
					$mfilter_query = $this->db->query( "SELECT * FROM `" . DB_PREFIX . "mfilter_url_alias` WHERE `alias` = '" . $this->db->escape( $part ) . "' AND `store_id` = " . (int)$this->config->get('store_id'));
				
					if( $mfilter_query->num_rows ) {
						if( ! $this->rgetMFP( $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp' ) ) {
							$this->request->get[($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp')] = $mfilter_query->row['mfp'];
						}
				
						$this->request->request['mfp_seo_alias'] = $part;
				
						continue;
					}
				}
			]]></add>
		</operation>
		<operation error="log">
			<search position="replace" regex="true"><![CDATA[~foreach *\( *\$parts as \$part *\) \{~]]></search>
			<add><![CDATA[
				$mfilterSeoConfig = $this->config->get( 'mega_filter_seo' );

				if( ! empty( $mfilterSeoConfig['enabled'] ) ) {
					//$this->load->model( 'module/mega_filter' );
					if( class_exists( 'VQMod' ) ) {
						require_once VQMod::modCheck( modification( DIR_SYSTEM . 'library/mfilter_core.php' ) );
					} else {
						require_once modification( DIR_SYSTEM . 'library/mfilter_core.php' );
					}
				
					if( class_exists( 'MegaFilterCore' ) ) {
						$parts = MegaFilterCore::prepareSeoParts( $this, $parts );
					}
				}
				
				foreach ($parts as $part) {				
					if( ! empty( $mfilterSeoConfig['enabled'] ) && class_exists( 'MegaFilterCore' ) && MegaFilterCore::prepareSeoPart( $this, $part ) ) {
						continue;
					}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/" name="common/seo_pro.php,startup/seo_pro.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[if (rawurldecode($url) != rawurldecode($seo)]]></search>
			<add><![CDATA[if (rawurldecode($url) != rawurldecode($seo) && strpos($url,($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=')===false]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[getQueryString(array('route']]></search>
			<add><![CDATA[getQueryString(array('route','_route_']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$this->request->get['route'] = 'product/category';]]></search>
			<add><![CDATA[
				if( empty( $this->request->get['route'] ) || strpos( $this->request->get['route'], 'module/mega_filter' ) === false ) {
					if( isset( $queries[$parts[0]] ) && strpos( $queries[$parts[0]], '/' ) !== false ) {
						$this->request->get['route'] = $queries[$parts[0]];
					} else {				
						if( $this->rgetMFP( $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp' ) ) {
							preg_match( '/path\[([^]]*)\]/', $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'), $mf_matches );

							if( empty( $mf_matches[1] ) ) {
								preg_match( '#path,([^/]+)#', $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'), $mf_matches );
							}

							if( ! empty( $mf_matches[1] ) && isset( $this->request->get['manufacturer_id'] ) ) {
								$this->request->get['route'] = 'product/manufacturer/info';
							} else {
								$this->request->get['route'] = 'product/category';
							}
						} else {
							$this->request->get['route'] = 'product/category';
						}
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[private function validate() {]]></search>
			<add><![CDATA[
				if( isset( $this->request->get['route'] ) && strpos( $this->request->get['route'], 'module/mega_filter' ) !== false ) {
					return;
				}
				
				if( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') !== null ) {
					return;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[private $cache_data = null;]]></search>
			<add><![CDATA[
				private $cache_data_mfp = null;
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$this->cache_data = $this->cache->get('seo_pro');]]></search>
			<add><![CDATA[
				$mfilterSeoConfig = $this->config->get( 'mega_filter_seo' );
				
				if( ! empty( $mfilterSeoConfig['enabled'] ) || ! empty( $mfilterSeoConfig['aliases_enabled'] ) ) {
					$this->cache_data_mfp = $this->cache->get('seo_pro_mfp.'.$this->config->get('store_id'));
					
					if( ! $this->cache_data_mfp ) {
						$mfilter_query = $this->db->query( "SELECT * FROM `" . DB_PREFIX . "mfilter_url_alias` WHERE `store_id` = " . (int)$this->config->get('store_id'));

						foreach ($mfilter_query->rows as $row) {
							$this->cache_data_mfp[mb_strtolower($row['alias'],'utf8')] = $row['mfp'];
						}

						$this->cache->set('seo_pro_mfp.'.$this->config->get('store_id'), $this->cache_data_mfp);
					}
				}				
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$parts = explode(]]></search>
			<add><![CDATA[
				$mfp_oparts = explode('/', trim(isset($_GET['_route_'])?$_GET['_route_']:(isset($route_)?$route_:$route), '/'));
				$org_parts = $parts;

				if( ! empty( $mfilterSeoConfig['enabled'] ) ) {
					//$this->load->model( 'module/mega_filter' );
					if( class_exists( 'VQMod' ) ) {
						require_once VQMod::modCheck( modification( DIR_SYSTEM . 'library/mfilter_core.php' ) );
					} else {
						require_once modification( DIR_SYSTEM . 'library/mfilter_core.php' );
					}
				
					if( class_exists( 'MegaFilterCore' ) ) {
						$parts = MegaFilterCore::prepareSeoParts( $this, $mfp_oparts );
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[foreach ($parts as $keyword) {]]></search>
			<add><![CDATA[
				$mfp_parts = array();
				$mfp_key = $mfp_key2 = 0;
				
				foreach ($parts as $keyword) {
					$mfp_keyword = isset( $org_parts[$mfp_key2] ) ? $org_parts[$mfp_key2] : $keyword;
					$mfp_key2++;
					
					if( ! empty( $mfilterSeoConfig['enabled'] ) ) {
						if( class_exists( 'MegaFilterCore' ) && MegaFilterCore::prepareSeoPart( $this, $mfp_keyword ) ) {
							continue;
						} else {
							$mfp_parts[] = $keyword;
						}
					} else {
						$mfp_parts[] = $keyword;
					}
				
					$mfp_key++;
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[if (count($rows) == sizeof($parts)) {]]></search>
			<add><![CDATA[
				$parts = $mfp_parts;
				
				if( null !== ( $mfp_last_part = array_pop( $mfp_parts ) ) ) {
					$mfp_parts[] = $mfp_last_part;
				
					if( isset( $this->cache_data_mfp[$mfp_last_part] ) ) {
						$this->request->get[($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp')] = $this->cache_data_mfp[$mfp_last_part];
						$rows[] = array('keyword' => $keyword, 'query' => ($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'='.$this->cache_data_mfp[$mfp_last_part]);
						$this->request->request['mfp_seo_alias'] = $mfp_last_part;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[function index() {]]></search>
			<add><![CDATA[
				$mfilterSeoConfig = $this->config->get( 'mega_filter_seo' );
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/model/catalog/" name="product.php">
		<operation>
			<search position="replace"><![CDATA[$query = $this->db->query("]]></search>
			<add><![CDATA[$sql = ("]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$sql = ("]]></search>
			<add><![CDATA[$query = $this->db->query($sql);]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$query = $this->db->query($sql);]]></search>
			<add><![CDATA[
				if( in_array( __FUNCTION__, array( 'getProducts', 'getTotalProducts', 'getProductSpecials', 'getTotalProductSpecials' ) ) ) {				
					if( isset( $this->request->get[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) || isset( $this->request->post[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) || ( NULL != ( $mfSettings = $this->config->get('mega_filter_settings') ) && ! empty( $mfSettings['in_stock_default_selected'] ) ) ) {
						if( empty( $data['mfp_disabled'] ) ) {
							$this->load->model( 'module/mega_filter' );
					
							if( class_exists( 'MegaFilterCore' ) ) {
								$sql = MegaFilterCore::newInstance( $this, $sql, isset( $data ) ? $data : array() )->getSQL( __FUNCTION__ );
							}
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/product/" name="category.php,search.php">
		<operation>
			<search position="before"><![CDATA[$product_total = $this->model_catalog_product->getTotalProducts($filter_data);]]></search>
			<add><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
		
				if( ! empty( $fmSettings['show_products_from_subcategories'] ) ) {
					if( ! empty( $fmSettings['level_products_from_subcategories'] ) ) {
						$fmLevel = (int) $fmSettings['level_products_from_subcategories'];
						$fmPath = explode( '_', ! $this->rgetMFP('path') ? '' : $this->rgetMFP('path'));

						if( $fmPath && count( $fmPath ) >= $fmLevel ) {
							$filter_data['filter_sub_category'] = '1';
						}
					} else {
						$filter_data['filter_sub_category'] = '1';
					}
				}
				
				if( ! empty( $this->request->get['manufacturer_id'] ) ) {
					$filter_data['filter_manufacturer_id'] = (int) $this->request->get['manufacturer_id'];
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/product/" name="category.php">
		<operation>
			<search position="before"><![CDATA[$data['categories'] = array();]]></search>
			<add><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
				
				if( $this->rgetMFP('mfp_path') !== null && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfSt = mb_strpos( $url, '&', $mfpPos+1, 'utf-8');
					$mfp = $mfSt === false ? $url : mb_substr( $url, $mfpPos, $mfSt-1, 'utf-8' );
					$url = $mfSt === false ? '' : mb_substr($url, $mfSt, mb_strlen( $url, 'utf-8' ), 'utf-8');				
					$mfp = preg_replace( '#path(\[[^\]]+\],?|,[^/]+/?)#', '', urldecode( $mfp ) );
					$mfp = preg_replace( '#&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=&|&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=#', '', $mfp );
					
					if( $mfp ) {
						$url .= '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' . urlencode( $mfp );
					}
				}
				
				if( ! empty( $fmSettings['not_remember_filter_for_subcategories'] ) && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfUrlBeforeChange = $url;
					$mfSt = mb_strpos( $url, '&', $mfpPos+1, 'utf-8');
					$url = $mfSt === false ? '' : mb_substr($url, $mfSt, mb_strlen( $url, 'utf-8' ), 'utf-8');
				} else if( empty( $fmSettings['not_remember_filter_for_subcategories'] ) && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfUrlBeforeChange = $url;
					$url = preg_replace( '/,?path\[[0-9_]+\]/', '', $url );
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$data['products'] = array();]]></search>
			<add><![CDATA[
				if( isset( $mfUrlBeforeChange ) ) {
					$url = $mfUrlBeforeChange;
					unset( $mfUrlBeforeChange );
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$parts = explode('_', (string)$this->request->get['path']);]]></search>
			<add><![CDATA[
				if( $this->rgetMFP('mfp_path') !== null ) {
					$parts = explode('_', (string)$this->rgetMFP('mfp_path'));
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$this->load->controller('common/header')]]></search>
			<add><![CDATA[
				if( class_exists( 'Mfilter_Helper' ) ) {
					Mfilter_Helper::createMetaLinks( $this, isset( $page ) ? $page : null, isset( $limit ) ? $limit : null, isset( $product_total ) ? $product_total : null );
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/" name="product/category.php,product/manufacturer.php,product/search.php,product/special.php,module/mega_filter.php">
		<operation error="skip">
			<search position="after"><![CDATA[$url = '';]]></search>
			<add><![CDATA[
				if( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') ) {
					$url .= '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' . urlencode( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') );
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$this->response->setOutput(]]></search>
			<add><![CDATA[
				$this->load->model( 'module/mega_filter' );
				
				$data = $this->model_module_mega_filter->prepareData( $data );
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$product_total = $this->model_catalog_product->getTotalProduct]]></search>
			<add><![CDATA[
				$filter_data['mfp_overwrite_path'] = true;
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$data['products'][] = array(]]></search>
			<add><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
				
				if( ! empty( $fmSettings['not_remember_filter_for_products'] ) && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfUrlBeforeChange = $url;
					$mfSt = mb_strpos( $url, '&', $mfpPos+1, 'utf-8');
					$url = $mfSt === false ? '' : mb_substr($url, $mfSt, mb_strlen( $url, 'utf-8' ), 'utf-8');
				}
			]]></add>
		</operation>
	</file>
	
	<file path="system/engine/event.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[trigger($event, array $args = array()) {]]></search>
			<add><![CDATA[
				if( in_array( $event, array( 'model/module/mega_filter/before', 'model/module/mega_filter/after' ) ) ) {
					return;
				}
			]]></add>
		</operation>
	</file>
	
	<file path="admin/controller/extension/extension/module.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[$this->load->controller('extension/module/' . $this->request->get['extension'] . '/install');]]></search>
			<add><![CDATA[
				if( $this->request->get['extension'] == 'mega_filter' ) {
					$this->load->controller('module/mega_filter/install');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[$this->load->controller('extension/module/' . $this->request->get['extension'] . '/uninstall');]]></search>
			<add><![CDATA[
				if( $this->request->get['extension'] == 'mega_filter' ) {
					$this->load->controller('module/mega_filter/uninstall');
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/" name="extension/feed/google_sitemap.php,feed/google_sitemap.php" error="skip">
		<operation>
			<search position="before"><![CDATA[$output .= '</urlset>';]]></search>
			<add><![CDATA[
				$this->load->model( 'module/mega_filter' );
					
				$output .= $this->model_module_mega_filter->createGoogleSitemap();
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/information/sitemap.php">
		<operation>
			<search position="before"><![CDATA[$this->response->setOutput(]]></search>
			<add><![CDATA[
				$this->load->model( 'module/mega_filter' );
					
				$data = $this->model_module_mega_filter->createSitemap( $data );
			]]></add>
		</operation>
	</file>
	
	<file path="admin/view/template/extension/extension/module.tpl" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[$extension['edit']]]></search>
			<add><![CDATA[str_replace( 'extension/module/mega_filter', 'module/mega_filter', $extension['edit'] )]]></add>
		</operation>
	</file>
	
	<file path="system/library/document.php">
		<operation error="skip" index="1">
			<search position="replace"><![CDATA[public function mfp_removeLink( $rel ) {foreach( $this->links as $k => $v ) {if( $v['rel'] == $rel ) {unset( $this->links[$k] );}}}]]></search>
			<add><![CDATA[]]></add>
		</operation>
		<operation error="skip" index="2">
			<search position="after"><![CDATA[class Document {]]></search>
			<add><![CDATA[
				public function mfp_removeLink( $rel ) {foreach( $this->links as $k => $v ) {if( $v['rel'] == $rel ) {unset( $this->links[$k] );}}}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/" name="extension/module/special.php,module/special.php" error="skip">
		<operation error="log">
			<search position="after"><![CDATA[$filter_data = array(]]></search>
			<add><![CDATA[
				'mfp_disabled' => true,
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/" name="language.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[function language() {]]></search>
			<add><![CDATA[
				if( ! empty( $this->request->post['redirect'] ) ) {
					$this->load->model('module/mega_filter');
				
					$this->request->post['redirect'] = $this->model_module_mega_filter->removeSeoMfpFromUrl( $this->request->post['redirect'], true );
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/" name="header.php" error="log">
		<operation error="log">
			<search position="after"><![CDATA[function index() {]]></search>
			<add><![CDATA[
				if( ! isset( $this->request->request['mfp_seo_alias'] ) ) {
					$mfilterSeoConfig = $this->config->get('mega_filter_seo');

					if( ! empty( $mfilterSeoConfig['meta_robots'] ) && ! empty( $this->request->get[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) ) {
						$data['mfp_robots_value'] = $mfilterSeoConfig['meta_robots_value'];
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/view/theme/*/template/common/" name="header.tpl" error="log">
		<operation error="log">
			<search position="replace"><![CDATA[</head>]]></search>
			<add><![CDATA[
				<?php if( ! empty( $mfp_robots_value ) ) { ?><meta name="robots" content="<?php echo $mfp_robots_value; ?>" /><?php } ?>
				</head>
			]]></add>
		</operation>
	</file>

</modification>